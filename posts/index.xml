<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Happy RC Life!</title>
    <link>https://tomokiikegami.github.io/Happy_RC.github.io/posts/</link>
    <description>Recent content in Posts on Happy RC Life!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tomokiikegami.github.io/Happy_RC.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ポリカボディ風の3Dモデルを作ってみた</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/01/%E3%83%9D%E3%83%AA%E3%82%AB%E3%83%9C%E3%83%87%E3%82%A3%E9%A2%A8%E3%81%AE3d%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/01/%E3%83%9D%E3%83%AA%E3%82%AB%E3%83%9C%E3%83%87%E3%82%A3%E9%A2%A8%E3%81%AE3d%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>なぜこれをやろうと思ったのか？ 　京商のOutlaw rampage Pro を購入したときに、ボディ塗装のデザインに悩んだことがきっかけです。 ラジコンのポリカボディは再塗装が難しい(透明なボディ裏面から塗装を重ねていく)ので、失敗したくないと思い、PC上で塗装結果をイメージ出来たら良いと考えました。
　そこで FreeCAD（オープンソースの3DCADソフト）を使って、ラジコンのボディを作ってみることにしました。
完成したボディ 　本当は作っている過程を載せたかったのですが、スクショを取り忘れてしまったので、完成形の写真だけになってしまいました( ;∀;)
  </description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2014/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.</description>
    </item>
    
  </channel>
</rss>
