<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Happy RC Blog !</title>
    <link>https://tomokiikegami.github.io/Happy_RC.github.io/post/</link>
    <description>Recent content in Posts on Happy RC Blog !</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 27 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tomokiikegami.github.io/Happy_RC.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bluetooth モジュールでRCサーボ・ESCを制御したい</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/27/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/27/</guid>
      <description>～ 目次 ～   1. 最終的にやりたいこと 2. 実験内容  2.1. システムの概要     1. 最終的にやりたいこと 最終的には、ラジコンのコントローラを作ることを目指しています。そのためには無線通信でRC装置を動かせるようになる必要があります。
　今回はその基礎として、PCをコントローラ、マイコン+Bluetooth をRC受信機と考えて実験を行いたいと思います。
2. 実験内容 2.1. システムの概要 　下の図は使用する装置、ぞれぞれの装置の役割を整理したものです。
  図：システムの概要  </description>
    </item>
    
    <item>
      <title>壊れたRCのギアを作りたい [3Dモデリング編1]</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/24/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/24/</guid>
      <description>～ 目次 ～   1. 設計に入る前に  1.1. 前回の振り返り 1.2. 壊れた歯車のモジュールは？   2. FreeCADでギア設計  2.1. Involute gear 機能で大まかな形状を作成 2.2. 細かいところを作っていく   3. 参考文献   1. 設計に入る前に 1.1. 前回の振り返り 　前回はギアの設計に必要な理論を調べました。今回は実際に歯車の設計をしていきたいと思います！
　前回の最後に掲載した計算式1をここにも書いておきます。この式を使っていきます。
\begin{equation} \label{mod_using_da} m = \frac{d_a}{z+2} \end{equation}
1.2. 壊れた歯車のモジュールは？ 　式(\ref{mod_using_da})を使って、歯車のモジュール $m$ を調べてみます。少し大変ですが、壊れた歯車の歯数は地道に数えていきます（笑）。
  ☝　歯車の歯数 $z$ と刃先円直径 $d_a$ を測定  　歯数を数えると $z=62$ [枚] 、刃先円直径は $d_a=38.9$ [mm] （ノギスで測定）でした。 これを計算式に入れて、モジュール $m$ [mm] を計算してみます。</description>
    </item>
    
    <item>
      <title>壊れたRCのギアを作りたい [理論編]</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/23/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/23/</guid>
      <description>～ 目次 ～   1. きっかけ 2. FreeCADでギア設計するには 3. ギア設計に必要な理論  3.1. 歯車の大きさを表す指標  3.1.1. ピッチ（pitch） 3.1.2. モジュール（module） 3.1.3. ピッチ（pitch）と モジュール（module）の関係   3.2. RCの世界で使われているピッチとモジュール 3.3. 欠けたギアからモジュールを計算   4. 参考文献   1. きっかけ 　古い1/12カー(Tamiya RM Mk.5)を屋外で走行させていたところ、後輪を駆動するスパーギアが破損して走行出来なくなってしまいました。かなり昔の車体なので部品の入手が難しく、どうしようか困っていました。
  ☝　後輪駆動部分（ダイレクトドライブの構造になっている）    ☝　分解してスパーギアを取り出した（歯が欠けている）  　3DCADと3Dプリンタを作ってロボットの歯車を設計・製作している人をみたのがきっかけで、ラジコンの歯車を作ってみたい思いました。
2. FreeCADでギア設計するには 　FreeCADではギアを設計するための機能を、標準で使えることが分かりました。（無料ソフトなのにすごい）
　この機能は「Part Design ワークベンチ」の中に入っており、「Involute gear」という名前がついています。（下図参照）
　細かい操作方法はXsimの技術ドキュメント1を参考にして、設計作業を進めていこうと思います。
  図：Involute gear 機能  3. ギア設計に必要な理論 3.</description>
    </item>
    
    <item>
      <title>hugoで上付き・下付き文字が入力できない</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/21/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/21/</guid>
      <description>現状 記事のファイル「index.md」には、下のような感じで上付き文字を含んだ文章を書いているのですが、出力結果がおかしくなってしまいます。
記事ファイル「index.md」の中身 x&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; + y&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; = r&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;　 出力結果 　hugoのserverコマンドで確認した出力結果がこちらです。
   出力結果（現状） 正しい結果（理想）            解決方法 　調べてみると、「config.json」に数行付け足すことで解決出来ることが分かりました。configファイルの形式が.jsonの場合は、以下の数行を付け足します。
「config.json」に付け足す文（カッコの数やカンマの位置に注意） { &amp;#34;markup&amp;#34;: { &amp;#34;goldmark&amp;#34;: { &amp;#34;renderer&amp;#34;: { &amp;#34;unsafe&amp;#34;: true } } } } .json形式でない場合（.yamlや.toml）は書き方が少し変わりますが、やることは全く同じです。書き足す文はこちらのページに記載されています。記載されている形式は「.yaml」,「.toml」,「.json」の三種類です。
実際に変更する前と変更した後のファイルは下のような感じです。細かい構成はテーマによって違うと思います。
追加する場所はどこでも良いのですが、今回は&amp;quot;disableKinds&amp;quot;の下側に追加してみました。カッコの数やカンマの位置に注意して書き足してください。
変更前の「config.json」 { &amp;#34;baseURL&amp;#34;: &amp;#34;https://tomokiikegami.github.io/Happy_RC.github.io/&amp;#34;, &amp;#34;languageCode&amp;#34;: &amp;#34;ja&amp;#34;, &amp;#34;permalinks&amp;#34;: { &amp;#34;post&amp;#34;: &amp;#34;/:year/:month/:day/&amp;#34; }, &amp;#34;title&amp;#34;: &amp;#34;Happy RC Blog !&amp;#34;, &amp;#34;theme&amp;#34;: &amp;#34;redgood&amp;#34;, &amp;#34;disableKinds&amp;#34;: &amp;#34;taxonomyTerm&amp;#34;, &amp;#34;params&amp;#34;: { &amp;#34;author&amp;#34;: &amp;#34;Tomoki Ikegami&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;ラジコンが楽しくなるような工作やレポートを掲載したいと思います！ラジコン以外にもやってみて苦労したことや、面白かったことについても記録していく予定です！&amp;#34;, &amp;#34;theme&amp;#34;: { &amp;#34;dateFormat&amp;#34;: &amp;#34;2006-01-02&amp;#34;, &amp;#34;copyrightInFooter&amp;#34;: false, &amp;#34;footerText&amp;#34;: &amp;#34;I hope to enjoy your RC Life&amp;#34;, &amp;#34;pinnedPosts&amp;#34;: false }, &amp;#34;about&amp;#34;: { &amp;#34;profileImage&amp;#34;: &amp;#34;images/profile.</description>
    </item>
    
    <item>
      <title>3Dプリンタでホイールを作ってみた</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/02/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/02/02/</guid>
      <description>自分でホイールを作ったきっかけ 　初めはホイールを自分で設計・製作することはあまり考えていなかったのですが、買ったタイヤが少し特殊だったのでそれに合わせて設計することにしました。
ボディ変更とタイヤの購入 　クローララジコン ECX Barrage 1.9 純正のボディに満足いかず、PROLINE の F-100 ボディに変更することがありました。そのときに、タイヤを 1.9インチのものから 1.55インチに変更することを考えました。
　ECX Barrage 1.9 の後継機として ECX Barrage Gen2 売られています。Gen2 は ホイールサイズが 1.9 → 1.55インチに変更されていました。そこで、これに使われている純正タイヤを購入しました。
タイヤを買ってから気づいた 　1.55 インチのタイヤなら家にあるホイールを使えば大丈夫だろうと思っていました。しかし、Gen2の純正用タイヤは妙に内側のゴムが厚いことに気付いてしまいました。（買っておいたホイール使えない&amp;hellip;笑）
しょうがない。自分で作ろう！ 　学校で機械設計、3DCADと3Dプリンタの勉強をしていたので、ラジコンのホイールを自分で設計することにしました。
設計作業 使ったソフト 　ホイールの設計には3DCADソフトを使うことにしました。学校で使用しているのは SolidWorks というCADソフトなのですが、非常に高価（調べると100万くらい？）なので趣味使うのはハードルが高いです。
　そこで、趣味で使えそうな無料ソフトを色々調べた結果、FreeCADを使うことにしました。他に色々なCADがあるなかで、FreeCADにした理由は、
 オープンソースである ずっと無料で使える 機能に全く制限がなく、拡張機能が充実している（有料版が存在しない）  　などです。使い方は図書館で本を借りて勉強しました。インターネットでも情報がたくさんあるのが嬉しいところです。フォーラムにも参考になるテクニックがたくさんあります。
3Dモデリング作業 　下の写真がモデリング中の様子になります。回転押し出しやブーリアン演算を駆使して形状を作っていきます。
 ベースの形状（円柱）☝
            完成した3Dモデル☝
3Dプリント 　家に3Dプリンタがなかったので、ShapeWays という3Dプリントサービスを使うことにしました。ShapeWays に3Dデータをアップロードすると、完成品を購入することが出来ます。</description>
    </item>
    
    <item>
      <title>ポリカボディ風の3Dモデルを作る</title>
      <link>https://tomokiikegami.github.io/Happy_RC.github.io/2022/01/27/</link>
      <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://tomokiikegami.github.io/Happy_RC.github.io/2022/01/27/</guid>
      <description>なぜこれをやろうと思ったのか？ 　京商のOutlaw rampage Pro を購入したときに、ボディ塗装のデザインに悩んだことがきっかけです。 ラジコンのポリカボディは再塗装が難しい(透明なボディ裏面から塗装を重ねていく)ので、失敗したくないと思い、PC上で塗装結果をイメージ出来たら良いと考えました。
　そこで FreeCAD（オープンソースの3DCADソフト）を使って、ラジコンのボディを作ってみることにしました。
FreeCADでボディ形状作成 製作過程 　FreeCADのサーフェス機能を使って、モデリングを行いました。サーフェス機能の使い方はこちらの記事が参考になりま した。
　製作の流れとしては、
 ボディ側面をFront面（正面）作成 ボディ側面をFront面からずらす（ボディ横幅の半分） ボディ側面をFront面に対してミラーコピー 2つのボディ側面の間に、ボンネットや屋根、窓ガラス、グリル、バンパーを作る 4で作った部分と側面を結合して完成  　という感じで進めました。
 側面を作っている様子☝（面の作成に失敗すると、画像のように変な突起が飛び出すことがありますw）
 完成した側面☝
 ミラーコピーした側面☝
 フロントウィンドウ作成中の様子☝
 おまけ☝（3Dモデルの結合に失敗して、側面が3つ出てきたw）
3DCADモデル完成 　ポリカボディのように薄い3Dモデルになったので、リアル感が出て良かったと思います。
 ボディ斜め前方から☝
 ボディ斜め後方から☝
 ボディ裏面の様子☝（薄いボディなのがよくわかると思います）
色を塗ってみる blenderで着色 　作成した3DCADデータからstl形式で3Dモデルを出力して、色塗りをしました。 初めはblenderで色をつけてみましたが、初心者の私にとっては操作が難しく、ポリゴンごとに着色するのが限界でした。
 法線ベクトル※ で面の向きを確認出来ます☝（水色のヒゲみたいなのが法線ベクトルです）
※法線ベクトル：面から垂直に出る矢印のこと。コンピュータグラフィックス用語。
 blenderで着色☝（斜め前方から）
 blenderで着色☝（斜め後方から）
ペイント3Dで着色 　最終的にペイント3Dを使って塗装イメージを作ることにしました。絵の具で色を塗るような雰囲気で、地道に3Dモデルを塗装していきます（笑）。
　色塗りだけでは雰囲気が出ないので、2DCAD（jw_CAD）で作成したテクスチャ（3Dモデル表面に貼る画像）を貼り付けました。
 ペイント3Dで色を塗る☝（はみ出さないようにする感じが筆塗りみたい）
 jw_CADで作ったウィンドウのテクスチャ☝
 テクスチャを貼り付ける様子☝
完成した3Dモデル 　出来上がった塗装イメージは下の画像のような感じです！</description>
    </item>
    
  </channel>
</rss>
